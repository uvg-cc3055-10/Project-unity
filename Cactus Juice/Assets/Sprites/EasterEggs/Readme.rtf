{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red0\green150\blue149;
\red51\green51\blue51;\red136\green136\blue136;\red51\green100\blue164;\red245\green125\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20560\viewh12520\viewkind0
\deftab720
\pard\pardeftab720\sl360\sa300

\f0\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Easter Eggs Cheats\kerning1\expnd0\expndtw0 \

\b0\fs28 Want to add some hidden little secrets to your game? Only few lines of code and your players will be able to discover and use it!\
\pard\pardeftab720

\b \cf2 Features:
\b0 \
\pard\pardeftab720\sl336\slmult1
\cf2 * very easy to use\
\pard\pardeftab720\sl360\sa300
\cf2 * well documented and easy to edit code\

\b How to use?\

\b0 \ul In your main script:\ulnone \
\pard\pardeftab720

\f1\fs24 \cf4 \cb1 \outl0\strokewidth0 using\cf5  EasterEgg;\uc0\u8232 
\f0\b\fs28 \cf2 \cb3 \outl0\strokewidth0 \strokec2 \

\b0 \ul Then:
\b \ulnone \
\

\f2\i\b0\fs24 \cf6 \cb1 \outl0\strokewidth0 // Create the sequence of keys that player need to press
\f0\i0\b\fs28 \cf2 \cb3 \outl0\strokewidth0 \strokec2 \

\f1\b0\fs24 \cf4 \cb1 \outl0\strokewidth0 var\cf5  sequence = \cf4 new\cf5  \cf7 List\cf5 <\cf7 KeyCode\cf5 > () \{ \uc0\u8232   \cf7 KeyCode\cf5 .LeftArrow, \cf7 KeyCode\cf5 .E, \cf7 KeyCode\cf5 .G, \cf7 KeyCode\cf5 .G, \cf7 KeyCode\cf5 .UpArrow\uc0\u8232 \} ;\u8232 \u8232 
\f2\i \cf6 // You can use Egg this way\uc0\u8232 
\f1\i0 \cf7 Egg\cf5 .Instance.ListenTo (sequence, () => \cf7 Debug\cf5 .Log(\cf8 "Anonymous callback!"\cf5 ));\uc0\u8232 \u8232 
\f2\i \cf6 // OR this way (checked with Unity 5.5). If this throw an error you can use the method above\uc0\u8232 
\f1\i0 \cf7 Egg\cf5 .Instance.ListenTo (sequence, TestMethod);\uc0\u8232 \u8232 
\f2\i \cf6 // OR Pass the sequence name if you would like to stop and/or resume the listeners later\uc0\u8232 // It's possible to create several sequences with the same name\u8232 
\f1\i0 \cf7 Egg\cf5 .Instance.ListenTo (\cf8 "Main Cheat"\cf5 , sequence, TestMethod);\uc0\u8232 \u8232 
\f2\i \cf6 // Pause (remove) listener by the sequence name\uc0\u8232 
\f1\i0 \cf7 Egg\cf5 .Instance.StopListen(\cf8 "Main Cheat"\cf5 );\uc0\u8232 \u8232 
\f2\i \cf6 // Resume listener by the sequence name\uc0\u8232 
\f1\i0 \cf7 Egg\cf5 .Instance.ResumeListen(\cf8 "Main Cheat"\cf5 );\uc0\u8232 \
\ul See DemoScene for sample of use}